name: Docker Image CI
on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "v*"

jobs:
  build:
    name: Build and publish docker images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        arrays: [
          {"name": "loadtester", "file": "Dockerfile.load-tester"},
          {"name": "record-tester", "file": "Dockerfile.record-tester"},
          {"name": "orch-tester", "file": "Dockerfile.orch-tester"},
          {"name": "mist-api-connector", "file": "Dockerfile.mist-api-connector"},
          {"name": "streamtester", "file": "Dockerfile"},
        ]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # Check https://github.com/livepeer/go-livepeer/pull/1891
          # for ref value discussion
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: livepeer/${{ matrix.arrays.name }}
          tags: |
            type=schedule,pattern={{date 'YYYYMMDDHHmmss'}}
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
            type=sha,format=long
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Tags
        id: tags
        uses: livepeer/action-gh-release-tags@v0
        with:
          always-latest-on-branch: master

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          build-args: |
            version=${{ steps.tags.outputs.version }}
          tags: ${{ steps.meta.outputs.tags }}
          file: ${{ matrix.arrays.file }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - uses: actions-ecosystem/action-regex-match@v2
        id: match-tag
        with:
          text: ${{ github.ref_name }}
          regex: '^(master|main|v[0-9]+\.\d+\.\d+)$'

      - name: Notify that new build has been uploaded
        if: ${{ steps.match-tag.outputs.match != '' }}
        run: curl -X POST https://holy-bread-207a.livepeer.workers.dev
