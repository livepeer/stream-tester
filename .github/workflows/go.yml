name: Publish new Release
#on: [push]
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.15
      uses: actions/setup-go@v1
      with:
        go-version: 1.15
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
    - name: Check that can be compiled
      run: go build -v cmd/streamtester/streamtester.go

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Build
    # runs-on: ubuntu-latest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [macos-latest, ubuntu-latest]
        os: [macos-latest, windows-latest, ubuntu-latest]
    needs: create_release
    steps:

    - name: Set up Go 1.15
      uses: actions/setup-go@v1
      with:
        go-version: 1.15
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Build
      run: |
        make
        make testdriver
        make lapi
        make mapi
        make connector
        make loadtester
        make recordtester

    - name: Compress Posix
      if: matrix.os != 'windows-latest'
      run: |
        gzip -9 -S .${{runner.os}}.gz streamtester
        gzip -9 -S .${{runner.os}}.gz loadtester
        gzip -9 -S .${{runner.os}}.gz lapi
        gzip -9 -S .${{runner.os}}.gz testdriver
        gzip -9 -S .${{runner.os}}.gz mapi
        gzip -9 -S .${{runner.os}}.gz recordtester
        gzip -9 -S .${{runner.os}}.gz mist-api-connector

    - name: Compress Windows
      if: matrix.os == 'windows-latest'
      run: |
        7z a streamtester.${{runner.os}}.zip streamtester.exe

    - name: Release Posix
      uses: softprops/action-gh-release@v1
      # if: startsWith(github.ref, 'refs/tags/')
      if: matrix.os != 'windows-latest'
      with:
        files: |
            streamtester.${{runner.os}}.gz
            loadtester.${{runner.os}}.gz
            recordtester.${{runner.os}}.gz
            lapi.${{runner.os}}.gz
            mapi.${{runner.os}}.gz
            testdriver.${{runner.os}}.gz
            mist-api-connector.${{runner.os}}.gz
          # body_path: ${{ github.workflow }}-CHANGELOG.txt
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Release Windows
      uses: softprops/action-gh-release@v1
      if: matrix.os == 'windows-latest'
      with:
        files: streamtester.${{runner.os}}.zip
          # body_path: ${{ github.workflow }}-CHANGELOG.txt
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
