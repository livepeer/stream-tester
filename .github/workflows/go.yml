name: Publish new Release

on:
  push:
    tags:
      - "v*"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: |
          go get -v -t -d ./...
      - name: Check that can be compiled
        run: go build -v cmd/streamtester/streamtester.go

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Build
    runs-on: macos-latest
    # needs: create_release
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: |
          go get -v -t -d ./...
      - name: Build
        run: |
          for platform in linux darwin windows
          do
            for arch in arm64 amd64
            do
              GOOS="$platform" GOARCH="$arch" make -j4 all GO_BUILD_DIR="build/${platform}/${arch}/"
              cd "build/${platform}/${arch}"
              for file in $(find . -type f -perm -a+x)
              do
                f_name="$(basename $file)"
                mv "${f_name}" "livepeer-${f_name}"
                if [ "$platform" = "windows" ]
                then
                  zip -9 "livepeer-${f_name/.exe/}-windows-${arch}.zip" "livepeer-${f_name}"
                else
                  tar -czf "livepeer-${f_name}-${platform}-${arch}.tar.gz" "livepeer-${f_name}"
                fi
              done
              cd -
            done
          done
          find . -type f -name 'livepeer-*.zip' -o 'livepeer-*.tar.gz' -exec mv -t build/ {} \+

      - name: Release Posix
        uses: softprops/action-gh-release@v1
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            build/livepeer-lapi-darwin-amd64.tar.gz
            build/livepeer-lapi-darwin-arm64.tar.gz
            build/livepeer-lapi-linux-amd64.tar.gz
            build/livepeer-lapi-linux-arm64.tar.gz
            build/livepeer-lapi-windows-amd64.zip
            build/livepeer-lapi-windows-arm64.zip
            build/livepeer-loadtester-darwin-amd64.tar.gz
            build/livepeer-loadtester-darwin-arm64.tar.gz
            build/livepeer-loadtester-linux-amd64.tar.gz
            build/livepeer-loadtester-linux-arm64.tar.gz
            build/livepeer-loadtester-windows-amd64.zip
            build/livepeer-loadtester-windows-arm64.zip
            build/livepeer-mapi-darwin-amd64.tar.gz
            build/livepeer-mapi-darwin-arm64.tar.gz
            build/livepeer-mapi-linux-amd64.tar.gz
            build/livepeer-mapi-linux-arm64.tar.gz
            build/livepeer-mapi-windows-amd64.zip
            build/livepeer-mapi-windows-arm64.zip
            build/livepeer-mist-api-connector-darwin-amd64.tar.gz
            build/livepeer-mist-api-connector-darwin-arm64.tar.gz
            build/livepeer-mist-api-connector-linux-amd64.tar.gz
            build/livepeer-mist-api-connector-linux-arm64.tar.gz
            build/livepeer-mist-api-connector-windows-amd64.zip
            build/livepeer-mist-api-connector-windows-arm64.zip
            build/livepeer-recordtester-darwin-amd64.tar.gz
            build/livepeer-recordtester-darwin-arm64.tar.gz
            build/livepeer-recordtester-linux-amd64.tar.gz
            build/livepeer-recordtester-linux-arm64.tar.gz
            build/livepeer-recordtester-windows-amd64.zip
            build/livepeer-recordtester-windows-arm64.zip
            build/livepeer-streamtester-darwin-amd64.tar.gz
            build/livepeer-streamtester-darwin-arm64.tar.gz
            build/livepeer-streamtester-linux-amd64.tar.gz
            build/livepeer-streamtester-linux-arm64.tar.gz
            build/livepeer-streamtester-windows-amd64.zip
            build/livepeer-streamtester-windows-arm64.zip
            build/livepeer-testdriver-darwin-amd64.tar.gz
            build/livepeer-testdriver-darwin-arm64.tar.gz
            build/livepeer-testdriver-linux-amd64.tar.gz
            build/livepeer-testdriver-linux-arm64.tar.gz
            build/livepeer-testdriver-windows-amd64.zip
            build/livepeer-testdriver-windows-arm64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
