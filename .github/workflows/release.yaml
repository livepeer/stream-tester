name: Publish new Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build
    runs-on: macos-latest
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Restore go modules cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build binaries
        shell: bash
        run: |
          mkdir -p build/ releases/
          for platform in linux darwin windows
          do
            for arch in arm64 amd64
            do
              cd "build/" && rm -rf * && cd -
              GOOS="$platform" GOARCH="$arch" make -j4 all GO_BUILD_DIR="build/"
              cd "build/"
              for file in $(find . -type f -perm -a+x)
              do
                f_name="$(basename $file)"
                mv "${f_name}" "livepeer-${f_name}"
                if [ "$platform" == "windows" ]
                then
                  zip -q9 "../releases/livepeer-${f_name/.exe/}-windows-${arch}.zip" "livepeer-${f_name}"
                else
                  tar -czf "../releases/livepeer-${f_name}-${platform}-${arch}.tar.gz" "livepeer-${f_name}"
                fi
              done
              cd -
            done
          done

      - name: Upload artifacts for processing further in linux
        uses: actions/upload-artifact@master
        with:
          name: release-artifacts
          path: releases/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Download artifacts from build stage
        uses: actions/download-artifact@master
        with:
          name: release-artifacts
          path: releases/

      - name: Generate sha256 checksum and gpg signatures for release artifacts
        uses: livepeer/action-gh-checksum-and-gpg-sign@latest
        with:
          artifacts-dir: releases
          release-name: ${{ github.ref_name }}
          gpg-key: ${{ secrets.CI_GPG_SIGNING_KEY }}
          gpg-key-passphrase: ${{ secrets.CI_GPG_SIGNING_PASSPHRASE }}

      - name: Release Posix
        uses: softprops/action-gh-release@v1
        with:
          files: |
            releases/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
