name: Publish new Release

on:
  push:
    tags:
      - "v*"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Restore go modules cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
      - name: Check that can be compiled
        run: go build -v cmd/streamtester/streamtester.go

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Build
    runs-on: macos-latest
    needs: create_release
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Restore go modules cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: |
          mkdir -p build/ releases/
          for platform in linux darwin windows
          do
            for arch in arm64 amd64
            do
              GOOS="$platform" GOARCH="$arch" make -j4 all GO_BUILD_DIR="build/"
              cd "build/"
              for file in $(find . -type f -perm -a+x)
              do
                f_name="$(basename $file)"
                mv "${f_name}" "livepeer-${f_name}"
                if [ "$platform" = "windows" ]
                then
                  zip -9 "../releases/livepeer-${f_name/.exe/}-windows-${arch}.zip" "livepeer-${f_name}"
                else
                  tar -czf "../releases/livepeer-${f_name}-${platform}-${arch}.tar.gz" "livepeer-${f_name}"
                fi
              done
              cd -
            done
          done

      - name: Generate sha256 checksum and gpg signatures for release artifacts
        uses: livepeer/action-gh-checksum-and-gpg-sign@latest
        with:
          artifacts-dir: releases
          release-name: livepeer
          gpg-key: ${{ secrets.CI_GPG_SIGNING_KEY }}
          gpg-key-passphrase: ${{ secrets.CI_GPG_SIGNING_PASSPHRASE }}

      - name: Release Posix
        uses: softprops/action-gh-release@v1
        with:
          files: |
            releases/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
